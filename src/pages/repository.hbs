<!DOCTYPE html>
<html lang="en">
<head>
  
  {{> head }}
  
  <title>Amrita Trees: Repository</title>
  <link rel="stylesheet" href="./css/style.css">
<!--   <link rel="stylesheet" href="./css/map.css"> -->
  
  <script src="./js/app.js" defer></script>
<!--   <script src="./js/map.js" defer></script> -->
  
<style>
  
  
.treeInfoWindow h3,.treeInfoWindow h4{
  text-align:center;
  text-transform: capitalize;
}
.treeInfoWindow p{
/*   padding-top:3px; */
/*   font-style:italic; */
  text-decoration:underline;
}
.treeInfoWindow a{
  display:block;
  text-align:center;
  font-size:0.85rem;
  text-decoration:none;
  color:green;
}
  
.treeInfoWindow .fa-external-link{
  text-decoration:none;    
  margin-left:.25rem;
}
  
#container{
  height:100%;
}
  
#mapContainer{
  height:100%;
  overflow:hidden;
}
  
#map{
/*   height:calc(100% + 23px); */
  height: 100%;
}  

  
.gm-style-iw-d{
  color:black;    
}
</style>
<style>
#treetable{
  
  --textSize: 1.1rem;
  --heightMultiplier: 5;
  
  --gap: 10px;
  width:min(350px,calc(100% - var(--gap) - var(--gap)));
  height:calc( var(--textSize) * var(--heightMultiplier) );
  background-image:linear-gradient(-90deg,#323232,#484848);
  border:3px solid black;
  border-left:4px solid black;
  border-right:1px solid black;
  overflow:auto;
  
  position:absolute;
  left:var(--gap);
  bottom:calc( 3 * var(--gap) );
  
  border-radius:15px;
}

#treetable .table{
  --margin: .5rem;
  display:flex;
  flex-direction:column;
  
  height:100%;
  overflow-y:scroll;
  
  scroll-snap-type: y mandatory;
  padding-top: calc( 2 * var(--textSize));
  padding-bottom: calc( 2 * var(--textSize));
  padding-left: 2rem;
  position:relative;
}
  
#treetable:after{
  --borderThickness: 4px;
  content:"";
  position:absolute;
  top:50%;
  left:calc(-1rem - var(--borderThickness));
  transform:translate(0,-50%) rotate(45deg) scale(.75);
  
  background-image:linear-gradient(45deg, green, yellowgreen);
  border: var(--borderThickness) solid black;
  width:2rem;
  height:2rem;
}
  
#treetable .table::-webkit-scrollbar {width: 3px;}
#treetable .table::-webkit-scrollbar-track {background: transparent;}
#treetable .table::-webkit-scrollbar-thumb {background: white;}
  
#treetable .table div{
  --outlineWidth: 90%;
  scroll-snap-align: center;
/*   margin-top: var(--margin); */
  margin-bottom: var(--margin);
  
  color:white;
  
  font-size: calc( var(--textSize) + .4rem );
  display: flex;
  align-items: center;
/*   justify-content: center; */
  
  position:relative;
  padding-left:15px;
  
/*   overflow:hidden; */
  height: 2rem;
  text-transform: capitalize;
  
}
#treetable .table div.active:before{
  
  content:"";
  position:absolute;left:0;top:50%;
  transform:translateY(-50%);
  height:100%;
  width: var(--outlineWidth);
  border:3px solid white;
  border-radius:25px;
}
  
#treetable .table div span{
  position:absolute;
  right:calc( 100% - var( --outlineWidth) - 3px + 3px);
  top:50%;
  transform:translateY(-50%);
  height: calc(100% - 6px);
/*   width: calc( var(--textSize) * 1.5 - 6px); */
  width: calc( 2rem - 9px);
  display:none;
  background-color:yellowgreen;
  border-radius:50%;
}
  
#treetable .table div.active span{
  display:block;    
}
  
#treetable .table div.active span i{
  display:flex;
  width:100%;
  height:100%;
  font-size:1rem;
  align-items: center;
  justify-content: center;
}
</style>
  
</head>
<body id="body">
  <div id="container">
    
    <div id="overlay" onclick="clickedOverlay()"></div>        

    <div id="mapContainer">
      <div id="map"></div>
    </div>

  </div>
</body>
  
<script>
function $(x){return document.querySelector(x);}

const chicago = { lat: 41.85, lng: -87.65 };
  
function tableItem(ele){
  ele.scrollIntoView();
  if($(".table").lastElementChild != ele)$(".table").scrollBy({left:0,top:-16});

  if( $(".table div.active") ) $(".table div.active").classList.remove("active");
  ele.classList.add("active");
}
  
function onWheel(e){
  if(e.deltaY > 0){$(".table").scrollBy({left:0,top:32, behavior:"smooth"});
  } else {$(".table").scrollBy({left:0,top:-32, behavior:"smooth"});}
  e.preventDefault();
}
  
function onKeyDown(e){
  console.log(e)
}
  
  
</script>
  
<script>
console.log("init map");
  
function createTable(map){
  const table = document.createElement("div");
  table.classList = "table noSelect";
  const icons = ["ðŸŽ„","ðŸŒ´","ðŸŒ²","ðŸŒ³"];
  
  
  fetch("./treerepo_namelist")
  .then(res=>res.json())
  .then(treeProps=>{
    console.log(treeProps);
    
    treeProps.forEach((tree,id) => {
      
      if( tree.coords ){
        
        const coords = tree.coords.split(",")
        const lat = Number( coords[0] );
        const lng = Number( coords[1] );

        const div = document.createElement("div");

        div.innerHTML = tree.scientific_name;
        div.addEventListener("click",()=>{
          pos = { lat: lat, lng:lng }
          map.setCenter(pos);
          tableItem(div);
        });

        table.appendChild(div);
      
      }
      
    });
    
  });

  table.addEventListener("wheel",onWheel);
  table.addEventListener("keydown",onKeyDown);
  
  
  return table;
}
  
  
  
async function initMap() {
  
  let map = new google.maps.Map(document.getElementById("map"),
    {
      center: { lat: 10.900016808568687, lng: 76.9028589289025 },
      zoom: 20,
      mapId: "661dd2cc98d8e9e2",
      mapTypeId: 'satellite',
    }
  );
  
  map.setOptions({
    // draggable: false, 
    // zoomControl: false, 
    // scrollwheel: false, 
    disableDoubleClickZoom: true,
    disableDefaultUI: true,
  });
  
  const infoBoxes = []
  
  const treetable = document.createElement("div");
  treetable.id = "treetable";
  treetable.style.marginLeft = "var(--gap)";
  // treetable.style.marginBottom = "calc( 3 * var(--gap) )";
  const table = createTable(map);
  
  treetable.appendChild(table);
  map.controls[google.maps.ControlPosition.LEFT_BOTTOM].push(treetable);

  
  fetch("./treerepo")
  .then( res => res.json() )
  .then( data => {
    data.forEach( tree => {
    // ###########################################################################
      
      const coords = tree.coords.split(",")
      const lat = Number( coords[0] );
      const lng = Number( coords[1] );
      
      const iconSize = 80;
      let tree_icon = tree_icon_url;
      const marker = new google.maps.Marker({
        title: tree.title,
        position: {lat: lat, lng: lng },
        map,
        icon: {
          url: tree_icon,
          scaledSize: new google.maps.Size(iconSize, iconSize),
          origin: new google.maps.Point(0, 0),
          anchor: new google.maps.Point(iconSize/2, iconSize/2),
        },
      })
      const infowindow = new google.maps.InfoWindow({content: `
        <div class="treeInfoWindow">
          <h3>${tree.tree_name}</h3>
          <h4>(${tree.scientific_name})</h4>
          <div>
            ${tree.origin}
            <p>
              ${tree.properties}
            </p>
            <a href="${tree.link}" target="_blank">Click here know more!<i class="fas fa-external-link"></i></a>
          </div>
        </div>`});
      infoBoxes.push(infowindow)
      
      marker.addListener("click", () => {
        infoBoxes.forEach(infoBox => infoBox.close());        
        infowindow.open({anchor: marker,map,shouldFocus: false,});
      });
      marker.setMap(map);
    // ########################################################################### 
    })
  });
  
}
  
// const tree_icon_url = "https://amritatrees.sirv.com/treeicon32.png";
const tree_icon_url = "https://cdn.discordapp.com/attachments/1027927070191403189/1039165618617860146/betterTree.png";
window.initMap = initMap;
</script>

<script async
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA554gL9cKaa3KqhS8biWu9p9eDCn31z0Q&callback=initMap">
</script>
  
</html>