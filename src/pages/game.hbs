<!DOCTYPE html>
<html lang="en">
<head>
  
  {{> head }}
  
  <title>Amrita Trees: map</title>
  <link rel="stylesheet" href="./css/zStyle.css">
<!--   <link rel="stylesheet" href="./css/invbar.css"> -->
  <link rel="stylesheet" href="./css/zGame.css">
  <link rel="stylesheet" href="./css/zNavbar.css">
  <link rel="stylesheet" href="./css/zInvbar.css">
  <link rel="stylesheet" href="./css/zSidebar.css">
  <link rel="stylesheet" href="./css/switch.css">
  
  <script src="./js/app.js" defer></script>
<!--   <script src="./js/map.js" defer></script> -->
  <script src="./js/sidebar.js" defer></script>
  <script src="./js/invbar.js" defer></script>
  
  
</head>
<body id="body">
  
  <div id="container">
    
    {{> navbar }}
    
    {{> sidebar }}
    <div id="overlay" onclick="clickedOverlay()"></div>
    
    <div id="mapContainer"><div id="map"></div></div>
    
    {{> invbar }}
    
  </div>
  
</body>
<script src="./js/game.js"></script>
<script async src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA554gL9cKaa3KqhS8biWu9p9eDCn31z0Q&callback=initMap"></script>
<script src="https://cdn.jsdelivr.net/npm/party-js@latest/bundle/party.min.js"></script>
  
<script>

function confetti(){
  party.confetti( document.body,{
    /**
     * Whether the debugging mode should be enabled.
     */
    debug: false,
    /**
     * The amount of gravity to apply to particles in the scene, in pixels.
     * Note that this value is positive by default, since the y-axis increases
     * downwards in a DOM.
     */
    gravity: 800,
    /**
     * The z-index to place the DOM containers at.
     */
    zIndex: 99999,
    count: party.variation.range(50, 80),
  });
  
}
  
const bird_url = "https://cdn.discordapp.com/attachments/1027927070191403189/1053936660582236240/bird_transparent.png";
function bird(){
  const span = document.createElement("span")
  span.classList = "bird";
  span.style.backgroundImage = `url(${bird_url})`;
  
  // const randomnumber = Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;
  let unit = ""
  if ( window.innerWidth > window.innerHeight ) {
    unit = "120vw";
  } else {
    unit = "120vh";
  }
  
  let degrees = Math.floor(Math.random() * 360);
  const radians = degrees * ( Math.PI / 180 );  
  console.log(unit,degrees,radians);
  
  span.style.setProperty("--direction",degrees+"deg");
  
  
  // span.style.setProperty("--x1",);
  // span.style.setProperty("--y1",);
  
  $("#container").appendChild(span);
}
  
  
function angle(cx, cy, ex, ey) {
  var dy = ey - cy;
  var dx = ex - cx;
  var distance = Math.sqrt( dx*dx + dy*dy );
  var theta = Math.atan2(dy, dx); // range (-PI, PI]
  theta *= 180 / Math.PI; // rads to degs, range (-180, 180]
  theta += 90; // So, 0 starts from Top Middle
  if (theta < 0) theta = 360 + theta; // range [0, 360)
  return theta;
}
</script>
  
</html>